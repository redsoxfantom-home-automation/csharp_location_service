/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'tom' at '9/14/16 9:09 PM' with Gradle 2.10
 */
// Import common tasks
apply from: "..${File.separator}automation-utilities${File.separator}build${File.separator}build.support.gradle"
apply from: "..${File.separator}automation-utilities${File.separator}build${File.separator}language_specific${File.separator}build.mono.gradle"

// Define dependencies to copy over in the copyDependencies task
ext.dependencies = []

// Define executables that must be present on the system to do a native deploy and run
ext.requiredNativeExecutables = ["mono","daemonize"]

// Copy the DockerFile template into the output
task copyDockerfile << {
   copy {
      from "${projectDir}${File.separator}Dockerfile.template"
      into "${buildDir}${File.separator}"
   }
}

// Overwrite the build task in build.support
build {
   dependsOn buildMono
   dependsOn parseTemplates
   dependsOn copyDockerfile
   dependsOn ':../automation-utilities/mono-utils:build'
   
   buildMono.mustRunAfter ':../automation-utilities/mono-utils:build'
   copyDockerfile.mustRunAfter buildMono
   parseTemplates.mustRunAfter copyDockerfile
}

// Runs an application that does not use Docker
runNativeApplication << {
   Properties props = loadProperties()
	String home = getProjectDirectory()
	exec {
		executable "daemonize"
		args=["-e", "${home}${File.separator}err",
			  "-o", "${home}${File.separator}out",
			  "-p", "${home}${File.separator}pid",
			  "/usr/bin/mono",
			  "${buildDir}${File.separator}bin${File.separator}Release${File.separator}csharp_location_service.exe"]
	}
}

// Terminates an application not using Docker
terminateNativeApplication << {
	try {
		// Read the pid of the currently running process (started with daemonize)
		String home = getProjectDirectory()
		String currentPid = new File("${home}${File.separator}pid").text.trim();
		
		exec {
			executable 'kill'
			args=["-9",currentPid]
		}
		
		delete "${home}${File.separator}pid"
	}
	catch (Exception ex) {
		println "Native application not currently running"
	}
}
